#include <iostream>

struct Node {
    int data;
    Node* next;
};

void insert(Node*& head, int value) {
    Node* newNode = new Node();
    newNode->data = value;
    newNode->next = head;
    head = newNode;
}

void deleteValue(Node*& head, int value) {
    if (!head) return;
    if (head->data == value) {
        Node* temp = head;
        head = head->next;
        delete temp;
        return;
    }
    Node* temp = head;
    while (temp->next && temp->next->data != value) {
        temp = temp->next;
    }
    if (temp->next) {
        Node* toDelete = temp->next;
        temp->next = temp->next->next;
        delete toDelete;
    }
}

void display(Node* head) {
    while (head) {
        std::cout << head->data;
        if (head->next) std::cout << "->";
        head = head->next;
    }
    std::cout << std::endl;
}

int main() {
    Node* head = nullptr;
    insert(head, 40);
    insert(head, 30);
    insert(head, 20);
    insert(head, 10);

    display(head);

    deleteValue(head, 20);

    display(head);

    return 0;
}
